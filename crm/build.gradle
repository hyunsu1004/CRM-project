plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.5'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'demo'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(22)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'


	//JUnit4 추가
	testImplementation("org.junit.vintage:junit-vintage-engine") {
		exclude group: "org.hamcrest", module: "hamcrest-core"
	}

	// 이메일 인증
	implementation 'org.springframework.boot:spring-boot-starter-mail'

	// 테스트를 위한 타임리프 추가 (필요하지 않다면 넣지 않아도 됨)
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

	// validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// Spring Security
	implementation 'org.springframework.boot:spring-boot-starter-security'

	//mysql Driver
	runtimeOnly 'com.mysql:mysql-connector-j'
	implementation 'mysql:mysql-connector-java:8.0.20'
	// Jsoup (HTML 파싱용 라이브러리), selenium (current-page)
	implementation 'org.seleniumhq.selenium:selenium-java:4.14.0'
	implementation 'org.jsoup:jsoup:1.16.1'
	// Spring Boot DevTools (선택 사항: 개발 편의성)
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
//
//	// JWT
//	implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
//	implementation 'io.jsonwebtoken:jjwt-impl:0.12.3'
//	implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3'
}

tasks.named('test') {
	useJUnitPlatform()
}
